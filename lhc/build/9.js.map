{"version":3,"sources":["../../src/pages/hk/hk-calendar/hk-calendar.module.ts","../../src/pages/hk/hk-calendar/hk-calendar.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HkCalendarPage } from './hk-calendar';\n\n@NgModule({\n  declarations: [\n    HkCalendarPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(HkCalendarPage),\n  ],\n})\nexport class HkCalendarPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/hk/hk-calendar/hk-calendar.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {HKService} from \"../../../service/hk.service\";\n\n/**\n * Generated class for the HkCalendarPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-hk-calendar',\n  templateUrl: 'hk-calendar.html',\n})\nexport class HkCalendarPage {\n  private mainData = [];\n  private tempDate: string;\n  private hasNext = true;\n  private cTimeStamp = new Date().getTime();\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private hkService: HKService) {\n    this.tempDate = new Date().getFullYear() + \"-\" + ((new Date().getMonth() < 9) ? 0 : \"\") + (new Date().getMonth() + 1);\n    // this.tempDate =\"2019-06\";\n    this.getHkCalendar(() => {\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad HkCalendarPage');\n  }\n\n  getHkCalendar(callback) {\n    let that: any = this;\n    that.hkService.getHkCalendar(that.tempDate).then((rs) => {\n      callback();\n      if (!rs.code) {\n        // let first: number;\n        // let last: number;\n        // first = new Date((that.tempDate + \"-01\").replace(/-/g,\"/\")).getDay();\n        // rs.data.first = first;\n        // for (let i = 0; i < first; i++) {\n        //   rs.data.kj_date.unshift([0, 0]);\n        // }\n        // last = 6 - that.getLastDay(Number(that.tempDate.split(\"-\")[0]), Number(that.tempDate.split(\"-\")[1]));\n        // for (let i = 0; i < last; i++) {\n        //   rs.data.kj_date.push([0, 0]);class=\"jumphk\" style=\"top: 63px;\">\n        // }\n        that.mainData.push(rs.data);\n        that.hasNext = rs.data.last_next;\n        if (rs.data['kj_date'].length > 0) {\n          if (that.tempDate.split(\"-\")[1] == 12) {\n            that.tempDate = (Number(that.tempDate.split(\"-\")[0]) + 1) + \"-01\";\n          } else {\n            that.tempDate = that.tempDate.split(\"-\")[0] + \"-\" + (Number(that.tempDate.split(\"-\")[1]) < 9 ? 0 : '') + (Number(that.tempDate.split(\"-\")[1]) + 1);\n          }\n        }\n      }\n    });\n  }\n\n  doInfinite(infiniteScroll) {\n    this.getHkCalendar(() => {\n      infiniteScroll.complete();\n    });\n  }\n\n\n  //获得某月的最后一天周几\n  getLastDay(year, month) {\n    let new_year = year;    //取当前的年份\n    let new_month = month++;//取下一个月的第一天，方便计算（最后一天不固定）\n    if (month > 12) {\n      new_month -= 12;        //月份减\n      new_year++;            //年份增\n    }\n    let new_date = new Date(new_year, new_month, 1);                //取当年当月中的第一天\n    return (new Date(new_date.getTime() - 1000 * 60 * 60 * 24)).getDay();//获取当月最后一天日期\n  }\n\n  toTimeStamp(str) {\n    return new Date(str.replace(/-/g,\"/\")).getTime();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/hk/hk-calendar/hk-calendar.ts"],"sourceRoot":""}